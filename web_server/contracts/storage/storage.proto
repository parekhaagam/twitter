syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.contract";
option java_outer_classname = "StorageProto";


package storage;

// The greeting service definition.
service Storage{

    rpc InsertTweets(InsertTweetRequest) returns (InsertTweetReply){}
    rpc GetFollowersTweets(GetFollowersRequest) returns (GetFollowersReply){}

    rpc GetAllUsers(GetUsersRequest) returns (GetUsersResponse){}
    rpc FollowUser(FollowUserRequest) returns (FollowUserResponse){}

    rpc InsertUser(InsertUserRequest) returns (InsertUserResponse) {}
    rpc UserExist(UserExistRequest) returns (UserExistResponse) {}
}

message User{
    string UserName = 1;
}

message InsertTweetRequest{
    User user = 1;
    string content =2;
}

message InsertTweetReply{
    string TID = 1;
}

message GetFollowersRequest{
    User user = 1;
}

message Tweet {
    string UserId = 1;
    string TID = 2;
    int64 Timestamp = 3;
    string Content = 4;
    string TimeMessage = 5;
}

message GetFollowersReply{
    repeated Tweet tweets = 1;
    string followingNumber = 2;
}

message userFollowed {
    string UserName = 1;
    bool Isfollowed = 2;
}

//Used for "Search Users" Page
message UserList{
    repeated userFollowed List = 1;
    bool NextPage = 2;
}

message GetUsersRequest{
    string LoggedInUserId = 1;
}


message GetUsersResponse{
    repeated userFollowed users = 1;
    bool NextPage = 2;
}

message FollowUserRequest{
    string userName = 1;
    repeated string userNames =2;
}

message FollowUserResponse{

    bool status = 1;
}
message InsertUserRequest{
    string userName = 1;
    string password = 2;
}

message InsertUserResponse{
    bool success = 1;
}
message UserExistRequest{
    string userName = 1;
    string password = 2;
}

message UserExistResponse{
    bool success = 1;
}